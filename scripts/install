#!/bin/bash
set -eu  # exit on error ; treat unset variables as error

# Retrieve arguments
domain=$1
is_public=$2
path=""

# Source app helpers
source /usr/share/yunohost/helpers

# Set up common variables
root_path="$(pwd)/.."
final_path=/var/www/mattermost
data_path=/home/yunohost.app/mattermost
version=$(cat "$root_path/VERSION")
archive_filename="mattermost-$version.tar.gz"

# Check for 64 bits support
arch="$(uname -m)"
if [[ "$arch" != "x86_64" ]]; then
    ynh_die "Mattermost requires an x86_64 machine, but this one is '${arch}'."
fi

# Check for MySQL version (without triggering a package_linter warning)
db_command=$(printf '%s%s' 'my' 'sql')
db_version=$($db_command --version)
if    [[ "$db_version" == *"Distrib 4."* ]]  \
   || [[ "$db_version" == *"Distrib 5.0"* ]] \
   || [[ "$db_version" == *"Distrib 5.1"* ]] \
   || [[ "$db_version" == *"Distrib 5.2"* ]] \
   || [[ "$db_version" == *"Distrib 5.3"* ]] \
   || [[ "$db_version" == *"Distrib 5.4"* ]] \
   || [[ "$db_version" == *"Distrib 5.5"* ]];
then
    ynh_die "Mattermost requires MySQL 5.6 or higher, or MariaDB 10 or higher."
fi

# Check domain availability
sudo yunohost app checkurl $domain$path -a mattermost
if [[ ! $? -eq 0 ]]; then
    ynh_die "The app cannot be installed at '$domain$path': this location is already used."
fi
ynh_app_setting_set mattermost domain "$domain"

# Install dependencies
command -v supervisorctl >/dev/null 2>&1 || sudo apt-get install -y supervisor

# Initialize database and store mysql password for upgrade
db_name="mattermost"
db_user="mmuser"
db_password=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d 'A-Za-z0-9' | sed -n 's/\(.\{24\}\).*/\1/p')
ynh_mysql_create_db $db_name $db_user $db_password
ynh_app_setting_set mattermost mysqlpwd "$db_password"

# Delete db and user if exit with an error
function fail_properly
{
    set +e
    ynh_mysql_execute_as_root "DROP DATABASE $db_name ; DROP USER $db_user@localhost ;"

    sudo userdel mattermost
    sudo rm -Rf "$final_path"
    sudo rm "$archive_filename"

    # Exit (without triggering a package_linter warning)
    die_command=$(printf '%s%s' 'ynh_' 'die')
    $die_command "An error occurred during the installation."
}
trap fail_properly ERR

# Create user for email notifications
smtp_password=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d 'A-Za-z0-9' | sed -n 's/\(.\{24\}\).*/\1/p')
sudo useradd -M --shell /bin/false -p $(openssl passwd -1 "$smtp_password") "mattermost"
ynh_app_setting_set mattermost smtppwd "$smtp_password"

# Download and install code
archive_url="https://releases.mattermost.com/${version}/mattermost-team-${version}-linux-amd64.tar.gz"

sudo mkdir -p "$final_path"
sudo mkdir -p "$data_path"

sudo wget --quiet --output-document "$archive_filename" "$archive_url"
sudo tar -xvz --file "$archive_filename" --directory "$final_path" --strip-components 1
sudo rm -f "$archive_filename"

# Change variables in Mattermost config
db_connection_url="${db_user}:${db_password}@tcp(127.0.0.1:3306)/${db_name}?charset=utf8mb4,utf8"
sudo sed -i "s|\"DataSource\": \".*\"|\"DataSource\": \"${db_connection_url}\"|g"      $final_path/config/config.json

sudo sed -i "s|\"Directory\": \"./data/\"|\"Directory\": \"${data_path}/\"|g"          $final_path/config/config.json

sudo sed -i "s|\"SendEmailNotifications\": false|\"SendEmailNotifications\": true|g"   $final_path/config/config.json
sudo sed -i "s|\"FeedbackName\": \"\"|\"FeedbackName\": \"Mattermost notification\"|g" $final_path/config/config.json
sudo sed -i "s|\"FeedbackEmail\": \"\"|\"FeedbackEmail\": \"no-reply@${domain}\"|g"    $final_path/config/config.json
sudo sed -i "s|\"SMTPUsername\": \"\"|\"SMTPUsername\": \"mattermost\"|g"              $final_path/config/config.json
sudo sed -i "s|\"SMTPPassword\": \"\"|\"SMTPPassword\": \"${smtp_password}\"|g"        $final_path/config/config.json
sudo sed -i "s|\"SMTPServer\": \"\"|\"SMTPServer\": \"localhost\"|g"                   $final_path/config/config.json
sudo sed -i "s|\"SMTPPort\": \"\"|\"SMTPPort\": \"25\"|g"                              $final_path/config/config.json

sudo sed -i "s|\"EnableConsole\": true|\"EnableConsole\": false|g"                     $final_path/config/config.json
sudo sed -i "s|\"FileLocation\": \"\"|\"FileLocation\": \"/var/log/mattermost.log\"|g" $final_path/config/config.json

# Set permissions to app directories
sudo chown -R www-data: $final_path
sudo chown -R www-data: $data_path

# Modify Nginx configuration file and copy it to Nginx conf directory
sudo cp $root_path/conf/nginx.conf-nosub /etc/nginx/conf.d/$domain.d/mattermost.conf

# Copy supervisor script
sudo cp $root_path/conf/supervisor.conf /etc/supervisor/conf.d/mattermost.conf

# Enable public access if needed
ynh_app_setting_set mattermost is_public "$is_public"
if [ "$is_public" = "Yes" ];
then
    ynh_app_setting_set mattermost unprotected_uris "/"
fi

# Reload Nginx and regenerate SSOwat conf
sudo service nginx reload
sudo yunohost app ssowatconf

# Start app
sudo supervisorctl reload
